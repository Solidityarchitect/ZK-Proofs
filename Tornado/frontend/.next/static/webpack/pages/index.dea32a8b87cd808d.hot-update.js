"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./circuit/witness_calculator.js":
/*!***************************************!*\
  !*** ./circuit/witness_calculator.js ***!
  \***************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\nmodule.exports = async function builder(code, options) {\n    options = options || {};\n    let wasmModule;\n    try {\n        wasmModule = await WebAssembly.compile(code);\n    } catch (err) {\n        console.log(err);\n        console.log(\"\\nTry to run circom --c in order to generate c++ code instead\\n\");\n        throw new Error(err);\n    }\n    let wc;\n    let errStr = \"\";\n    let msgStr = \"\";\n    const instance = await WebAssembly.instantiate(wasmModule, {\n        runtime: {\n            exceptionHandler: function(code) {\n                let err;\n                if (code == 1) {\n                    err = \"Signal not found.\\n\";\n                } else if (code == 2) {\n                    err = \"Too many signals set.\\n\";\n                } else if (code == 3) {\n                    err = \"Signal already set.\\n\";\n                } else if (code == 4) {\n                    err = \"Assert Failed.\\n\";\n                } else if (code == 5) {\n                    err = \"Not enough memory.\\n\";\n                } else if (code == 6) {\n                    err = \"Input signal array access exceeds the size.\\n\";\n                } else {\n                    err = \"Unknown error.\\n\";\n                }\n                throw new Error(err + errStr);\n            },\n            printErrorMessage: function() {\n                errStr += getMessage() + \"\\n\";\n            // console.error(getMessage());\n            },\n            writeBufferMessage: function() {\n                const msg = getMessage();\n                // Any calls to `log()` will always end with a `\\n`, so that's when we print and reset\n                if (msg === \"\\n\") {\n                    console.log(msgStr);\n                    msgStr = \"\";\n                } else {\n                    // If we've buffered other content, put a space in between the items\n                    if (msgStr !== \"\") {\n                        msgStr += \" \";\n                    }\n                    // Then append the message to the message we are creating\n                    msgStr += msg;\n                }\n            },\n            showSharedRWMemory: function() {\n                printSharedRWMemory();\n            }\n        }\n    });\n    const sanityCheck = options;\n    //        options &&\n    //        (\n    //            options.sanityCheck ||\n    //            options.logGetSignal ||\n    //            options.logSetSignal ||\n    //            options.logStartComponent ||\n    //            options.logFinishComponent\n    //        );\n    wc = new WitnessCalculator(instance, sanityCheck);\n    return wc;\n    function getMessage() {\n        var message = \"\";\n        var c = instance.exports.getMessageChar();\n        while(c != 0){\n            message += String.fromCharCode(c);\n            c = instance.exports.getMessageChar();\n        }\n        return message;\n    }\n    function printSharedRWMemory() {\n        const shared_rw_memory_size = instance.exports.getFieldNumLen32();\n        const arr = new Uint32Array(shared_rw_memory_size);\n        for(let j = 0; j < shared_rw_memory_size; j++){\n            arr[shared_rw_memory_size - 1 - j] = instance.exports.readSharedRWMemory(j);\n        }\n        // If we've buffered other content, put a space in between the items\n        if (msgStr !== \"\") {\n            msgStr += \" \";\n        }\n        // Then append the value to the message we are creating\n        msgStr += fromArray32(arr).toString();\n    }\n};\nclass WitnessCalculator {\n    circom_version() {\n        return this.instance.exports.getVersion();\n    }\n    async _doCalculateWitness(input, sanityCheck) {\n        //input is assumed to be a map from signals to arrays of bigints\n        this.instance.exports.init(this.sanityCheck || sanityCheck ? 1 : 0);\n        const keys = Object.keys(input);\n        var input_counter = 0;\n        keys.forEach((k)=>{\n            const h = fnvHash(k);\n            const hMSB = parseInt(h.slice(0, 8), 16);\n            const hLSB = parseInt(h.slice(8, 16), 16);\n            const fArr = flatArray(input[k]);\n            let signalSize = this.instance.exports.getInputSignalSize(hMSB, hLSB);\n            if (signalSize < 0) {\n                throw new Error(\"Signal \".concat(k, \" not found\\n\"));\n            }\n            if (fArr.length < signalSize) {\n                throw new Error(\"Not enough values for input signal \".concat(k, \"\\n\"));\n            }\n            if (fArr.length > signalSize) {\n                throw new Error(\"Too many values for input signal \".concat(k, \"\\n\"));\n            }\n            for(let i = 0; i < fArr.length; i++){\n                const arrFr = toArray32(normalize(fArr[i], this.prime), this.n32);\n                for(let j = 0; j < this.n32; j++){\n                    this.instance.exports.writeSharedRWMemory(j, arrFr[this.n32 - 1 - j]);\n                }\n                try {\n                    this.instance.exports.setInputSignal(hMSB, hLSB, i);\n                    input_counter++;\n                } catch (err) {\n                    // console.log(`After adding signal ${i} of ${k}`)\n                    throw new Error(err);\n                }\n            }\n        });\n        if (input_counter < this.instance.exports.getInputSize()) {\n            throw new Error(\"Not all inputs have been set. Only \".concat(input_counter, \" out of \").concat(this.instance.exports.getInputSize()));\n        }\n    }\n    async calculateWitness(input, sanityCheck) {\n        const w = [];\n        await this._doCalculateWitness(input, sanityCheck);\n        for(let i = 0; i < this.witnessSize; i++){\n            this.instance.exports.getWitness(i);\n            const arr = new Uint32Array(this.n32);\n            for(let j = 0; j < this.n32; j++){\n                arr[this.n32 - 1 - j] = this.instance.exports.readSharedRWMemory(j);\n            }\n            w.push(fromArray32(arr));\n        }\n        return w;\n    }\n    async calculateBinWitness(input, sanityCheck) {\n        const buff32 = new Uint32Array(this.witnessSize * this.n32);\n        const buff = new Uint8Array(buff32.buffer);\n        await this._doCalculateWitness(input, sanityCheck);\n        for(let i = 0; i < this.witnessSize; i++){\n            this.instance.exports.getWitness(i);\n            const pos = i * this.n32;\n            for(let j = 0; j < this.n32; j++){\n                buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n            }\n        }\n        return buff;\n    }\n    async calculateWTNSBin(input, sanityCheck) {\n        const buff32 = new Uint32Array(this.witnessSize * this.n32 + this.n32 + 11);\n        const buff = new Uint8Array(buff32.buffer);\n        await this._doCalculateWitness(input, sanityCheck);\n        //\"wtns\"\n        buff[0] = \"w\".charCodeAt(0);\n        buff[1] = \"t\".charCodeAt(0);\n        buff[2] = \"n\".charCodeAt(0);\n        buff[3] = \"s\".charCodeAt(0);\n        //version 2\n        buff32[1] = 2;\n        //number of sections: 2\n        buff32[2] = 2;\n        //id section 1\n        buff32[3] = 1;\n        const n8 = this.n32 * 4;\n        //id section 1 length in 64bytes\n        const idSection1length = 8 + n8;\n        const idSection1lengthHex = idSection1length.toString(16);\n        buff32[4] = parseInt(idSection1lengthHex.slice(0, 8), 16);\n        buff32[5] = parseInt(idSection1lengthHex.slice(8, 16), 16);\n        //this.n32\n        buff32[6] = n8;\n        //prime number\n        this.instance.exports.getRawPrime();\n        var pos = 7;\n        for(let j = 0; j < this.n32; j++){\n            buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n        }\n        pos += this.n32;\n        // witness size\n        buff32[pos] = this.witnessSize;\n        pos++;\n        //id section 2\n        buff32[pos] = 2;\n        pos++;\n        // section 2 length\n        const idSection2length = n8 * this.witnessSize;\n        const idSection2lengthHex = idSection2length.toString(16);\n        buff32[pos] = parseInt(idSection2lengthHex.slice(0, 8), 16);\n        buff32[pos + 1] = parseInt(idSection2lengthHex.slice(8, 16), 16);\n        pos += 2;\n        for(let i = 0; i < this.witnessSize; i++){\n            this.instance.exports.getWitness(i);\n            for(let j = 0; j < this.n32; j++){\n                buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n            }\n            pos += this.n32;\n        }\n        return buff;\n    }\n    constructor(instance, sanityCheck){\n        this.instance = instance;\n        this.version = this.instance.exports.getVersion();\n        this.n32 = this.instance.exports.getFieldNumLen32();\n        this.instance.exports.getRawPrime();\n        const arr = new Uint32Array(this.n32);\n        for(let i = 0; i < this.n32; i++){\n            arr[this.n32 - 1 - i] = this.instance.exports.readSharedRWMemory(i);\n        }\n        this.prime = fromArray32(arr);\n        this.witnessSize = this.instance.exports.getWitnessSize();\n        this.sanityCheck = sanityCheck;\n    }\n}\nfunction toArray32(rem, size) {\n    const res = [] //new Uint32Array(size); //has no unshift\n    ;\n    const radix = BigInt(0x100000000);\n    while(rem){\n        res.unshift(Number(rem % radix));\n        rem = rem / radix;\n    }\n    if (size) {\n        var i = size - res.length;\n        while(i > 0){\n            res.unshift(0);\n            i--;\n        }\n    }\n    return res;\n}\nfunction fromArray32(arr) {\n    //returns a BigInt\n    var res = BigInt(0);\n    const radix = BigInt(0x100000000);\n    for(let i = 0; i < arr.length; i++){\n        res = res * radix + BigInt(arr[i]);\n    }\n    return res;\n}\nfunction flatArray(a) {\n    var res = [];\n    fillArray(res, a);\n    return res;\n    function fillArray(res, a) {\n        if (Array.isArray(a)) {\n            for(let i = 0; i < a.length; i++){\n                fillArray(res, a[i]);\n            }\n        } else {\n            res.push(a);\n        }\n    }\n}\nfunction normalize(n, prime) {\n    let res = BigInt(n) % prime;\n    if (res < 0) res += prime;\n    return res;\n}\nfunction fnvHash(str) {\n    const uint64_max = BigInt(2) ** BigInt(64);\n    let hash = BigInt(\"0xCBF29CE484222325\");\n    for(var i = 0; i < str.length; i++){\n        hash ^= BigInt(str[i].charCodeAt());\n        hash *= BigInt(0x100000001b3);\n        hash %= uint64_max;\n    }\n    let shash = hash.toString(16);\n    let n = 16 - shash.length;\n    shash = \"0\".repeat(n).concat(shash);\n    return shash;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./circuit/witness_calculator.js\n"));

/***/ }),

/***/ "./components/interface.js":
/*!*********************************!*\
  !*** ./components/interface.js ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _utils_$u__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/$u */ \"./utils/$u.js\");\n/* harmony import */ var ethers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ethers */ \"./node_modules/ethers/lib.esm/index.js\");\n\nvar _s = $RefreshSig$();\n\n\n\nconst wc = __webpack_require__(/*! ../circuit/witness_calculator */ \"./circuit/witness_calculator.js\");\nconst Interface = ()=>{\n    _s();\n    const [account, updateAccount] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const connectMetamask = async ()=>{\n        try {\n            if (!window.ethereum) {\n                alert(\"Please install Metamask to use this app.\");\n                throw \"no-metamask\";\n            }\n            var accounts = await window.ethereum.request({\n                method: \"eth_requestAccounts\"\n            });\n            var chainId = window.ethereum.networkVersion;\n            var activeAccount = accounts[0];\n            var balance = await window.ethereum.request({\n                method: \"eth_getBalance\",\n                params: [\n                    activeAccount,\n                    \"latest\"\n                ]\n            });\n            balance = _utils_$u__WEBPACK_IMPORTED_MODULE_2__[\"default\"].moveDecimalLeft(ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.BigNumber.from(balance).toString(), 18);\n            var newAccountState = {\n                chainId: chainId,\n                address: activeAccount,\n                balance: balance\n            };\n            updateAccount(newAccountState);\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    const depositEther = async ()=>{\n        // generate secret, nullifier\n        const secret = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.BigNumber.from(ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.utils.randomBytes(32)).toString();\n        const nullifier = ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.BigNumber.from(ethers__WEBPACK_IMPORTED_MODULE_3__.ethers.utils.randomBytes(32)).toString();\n        const input = {\n            secret: _utils_$u__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BN256ToBin(secret).split(\"\"),\n            nullifier: _utils_$u__WEBPACK_IMPORTED_MODULE_2__[\"default\"].BN256ToBin(nullifier).split(\"\")\n        };\n        var res = await fetch(\"/deposit.wasm\");\n        var buffer = await res.arrayBuffer();\n        var depositWC = await wc(buffer);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        children: [\n            !!account ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"chainId: \",\n                            account.chainId\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                        lineNumber: 56,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Wallet Address: \",\n                            account.address\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                        lineNumber: 57,\n                        columnNumber: 21\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: [\n                            \"Balance: \",\n                            account.balance\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                        lineNumber: 58,\n                        columnNumber: 21\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                lineNumber: 55,\n                columnNumber: 17\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: connectMetamask,\n                    children: \"Connect Metamask\"\n                }, void 0, false, {\n                    fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                    lineNumber: 62,\n                    columnNumber: 21\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                lineNumber: 61,\n                columnNumber: 17\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"hr\", {}, void 0, false, {\n                    fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                    lineNumber: 67,\n                    columnNumber: 17\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                lineNumber: 66,\n                columnNumber: 13\n            }, undefined),\n            !!account ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                    onClick: depositEther,\n                    children: \"Deposit 1 ETH\"\n                }, void 0, false, {\n                    fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                    lineNumber: 72,\n                    columnNumber: 21\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                lineNumber: 71,\n                columnNumber: 17\n            }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"You need to connect Metamask to use this section.\"\n                }, void 0, false, {\n                    fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                    lineNumber: 76,\n                    columnNumber: 21\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n                lineNumber: 75,\n                columnNumber: 17\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/hosanna/ZK-Proofs/Tornado/frontend/components/interface.js\",\n        lineNumber: 53,\n        columnNumber: 9\n    }, undefined);\n};\n_s(Interface, \"kFtZZPzcWEIecIb4PXVTED1DKKc=\");\n_c = Interface;\n/* harmony default export */ __webpack_exports__[\"default\"] = (Interface);\nvar _c;\n$RefreshReg$(_c, \"Interface\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL2ludGVyZmFjZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBZ0M7QUFDSjtBQUNHO0FBRS9CLE1BQU1HLEtBQUtDLG1CQUFPQSxDQUFDLHNFQUErQjtBQUVsRCxNQUFNQyxZQUFZOztJQUNkLE1BQU0sQ0FBQ0MsU0FBU0MsY0FBYyxHQUFHUCwrQ0FBUUEsQ0FBQztJQUUxQyxNQUFNUSxrQkFBa0I7UUFDcEIsSUFBSTtZQUNBLElBQUksQ0FBQ0MsT0FBT0MsUUFBUSxFQUFFO2dCQUNsQkMsTUFBTTtnQkFDTixNQUFNO1lBQ1Y7WUFFQSxJQUFJQyxXQUFXLE1BQU1ILE9BQU9DLFFBQVEsQ0FBQ0csT0FBTyxDQUFDO2dCQUFFQyxRQUFRO1lBQXNCO1lBQzdFLElBQUlDLFVBQVVOLE9BQU9DLFFBQVEsQ0FBQ00sY0FBYztZQUM1QyxJQUFJQyxnQkFBZ0JMLFFBQVEsQ0FBQyxFQUFFO1lBQy9CLElBQUlNLFVBQVUsTUFBTVQsT0FBT0MsUUFBUSxDQUFDRyxPQUFPLENBQUM7Z0JBQ3hDQyxRQUFRO2dCQUNSSyxRQUFRO29CQUFDRjtvQkFBZTtpQkFBUztZQUNyQztZQUNBQyxVQUFVakIsaUVBQWtCLENBQUNDLDBDQUFNQSxDQUFDbUIsU0FBUyxDQUFDQyxJQUFJLENBQUNKLFNBQVNLLFFBQVEsSUFBSTtZQUV4RSxJQUFJQyxrQkFBa0I7Z0JBQ2xCVCxTQUFTQTtnQkFDVFUsU0FBU1I7Z0JBQ1RDLFNBQVNBO1lBQ2I7WUFDQVgsY0FBY2lCO1FBQ2xCLEVBQUUsT0FBT0UsR0FBRztZQUNSQyxRQUFRQyxHQUFHLENBQUNGO1FBQ2hCO0lBQ0o7SUFFQSxNQUFNRyxlQUFlO1FBQ2pCLDZCQUE2QjtRQUM3QixNQUFNQyxTQUFTNUIsMENBQU1BLENBQUNtQixTQUFTLENBQUNDLElBQUksQ0FBQ3BCLDBDQUFNQSxDQUFDNkIsS0FBSyxDQUFDQyxXQUFXLENBQUMsS0FBS1QsUUFBUTtRQUMzRSxNQUFNVSxZQUFZL0IsMENBQU1BLENBQUNtQixTQUFTLENBQUNDLElBQUksQ0FBQ3BCLDBDQUFNQSxDQUFDNkIsS0FBSyxDQUFDQyxXQUFXLENBQUMsS0FBS1QsUUFBUTtRQUU5RSxNQUFNVyxRQUFRO1lBQ1ZKLFFBQVE3Qiw0REFBYSxDQUFDNkIsUUFBUU0sS0FBSyxDQUFDO1lBQ3BDSCxXQUFXaEMsNERBQWEsQ0FBQ2dDLFdBQVdHLEtBQUssQ0FBQztRQUM5QztRQUVBLElBQUlDLE1BQU0sTUFBTUMsTUFBTTtRQUN0QixJQUFJQyxTQUFTLE1BQU1GLElBQUlHLFdBQVc7UUFDbEMsSUFBSUMsWUFBWSxNQUFNdEMsR0FBR29DO0lBQzdCO0lBRUEscUJBQ0ksOERBQUNHOztZQUNJLENBQUMsQ0FBQ3BDLHdCQUNDLDhEQUFDb0M7O2tDQUNHLDhEQUFDQzs7NEJBQUU7NEJBQVVyQyxRQUFRUyxPQUFPOzs7Ozs7O2tDQUM1Qiw4REFBQzRCOzs0QkFBRTs0QkFBaUJyQyxRQUFRbUIsT0FBTzs7Ozs7OztrQ0FDbkMsOERBQUNrQjs7NEJBQUU7NEJBQVVyQyxRQUFRWSxPQUFPOzs7Ozs7Ozs7Ozs7MENBR2hDLDhEQUFDd0I7MEJBQ0csNEVBQUNFO29CQUFPQyxTQUFTckM7OEJBQWlCOzs7Ozs7Ozs7OzswQkFJMUMsOERBQUNrQzswQkFDRyw0RUFBQ0k7Ozs7Ozs7Ozs7WUFHSixDQUFDLENBQUN4Qyx3QkFDQyw4REFBQ29DOzBCQUNHLDRFQUFDRTtvQkFBT0MsU0FBU2hCOzhCQUFjOzs7Ozs7Ozs7OzBDQUduQyw4REFBQ2E7MEJBQ0csNEVBQUNDOzhCQUFFOzs7Ozs7Ozs7Ozs7Ozs7OztBQUt2QjtHQTFFTXRDO0tBQUFBO0FBNEVOLCtEQUFlQSxTQUFTQSxFQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvaW50ZXJmYWNlLmpzPzhjYmMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0ICR1IGZyb20gXCIuLi91dGlscy8kdVwiXG5pbXBvcnQgeyBldGhlcnMgfSBmcm9tIFwiZXRoZXJzXCJcblxuY29uc3Qgd2MgPSByZXF1aXJlKFwiLi4vY2lyY3VpdC93aXRuZXNzX2NhbGN1bGF0b3JcIilcblxuY29uc3QgSW50ZXJmYWNlID0gKCkgPT4ge1xuICAgIGNvbnN0IFthY2NvdW50LCB1cGRhdGVBY2NvdW50XSA9IHVzZVN0YXRlKG51bGwpXG5cbiAgICBjb25zdCBjb25uZWN0TWV0YW1hc2sgPSBhc3luYyAoKSA9PiB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBpZiAoIXdpbmRvdy5ldGhlcmV1bSkge1xuICAgICAgICAgICAgICAgIGFsZXJ0KFwiUGxlYXNlIGluc3RhbGwgTWV0YW1hc2sgdG8gdXNlIHRoaXMgYXBwLlwiKVxuICAgICAgICAgICAgICAgIHRocm93IFwibm8tbWV0YW1hc2tcIlxuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB2YXIgYWNjb3VudHMgPSBhd2FpdCB3aW5kb3cuZXRoZXJldW0ucmVxdWVzdCh7IG1ldGhvZDogXCJldGhfcmVxdWVzdEFjY291bnRzXCIgfSlcbiAgICAgICAgICAgIHZhciBjaGFpbklkID0gd2luZG93LmV0aGVyZXVtLm5ldHdvcmtWZXJzaW9uXG4gICAgICAgICAgICB2YXIgYWN0aXZlQWNjb3VudCA9IGFjY291bnRzWzBdXG4gICAgICAgICAgICB2YXIgYmFsYW5jZSA9IGF3YWl0IHdpbmRvdy5ldGhlcmV1bS5yZXF1ZXN0KHtcbiAgICAgICAgICAgICAgICBtZXRob2Q6IFwiZXRoX2dldEJhbGFuY2VcIixcbiAgICAgICAgICAgICAgICBwYXJhbXM6IFthY3RpdmVBY2NvdW50LCBcImxhdGVzdFwiXSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICBiYWxhbmNlID0gJHUubW92ZURlY2ltYWxMZWZ0KGV0aGVycy5CaWdOdW1iZXIuZnJvbShiYWxhbmNlKS50b1N0cmluZygpLCAxOClcblxuICAgICAgICAgICAgdmFyIG5ld0FjY291bnRTdGF0ZSA9IHtcbiAgICAgICAgICAgICAgICBjaGFpbklkOiBjaGFpbklkLFxuICAgICAgICAgICAgICAgIGFkZHJlc3M6IGFjdGl2ZUFjY291bnQsXG4gICAgICAgICAgICAgICAgYmFsYW5jZTogYmFsYW5jZSxcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVwZGF0ZUFjY291bnQobmV3QWNjb3VudFN0YXRlKVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlKVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgY29uc3QgZGVwb3NpdEV0aGVyID0gYXN5bmMgKCkgPT4ge1xuICAgICAgICAvLyBnZW5lcmF0ZSBzZWNyZXQsIG51bGxpZmllclxuICAgICAgICBjb25zdCBzZWNyZXQgPSBldGhlcnMuQmlnTnVtYmVyLmZyb20oZXRoZXJzLnV0aWxzLnJhbmRvbUJ5dGVzKDMyKSkudG9TdHJpbmcoKVxuICAgICAgICBjb25zdCBudWxsaWZpZXIgPSBldGhlcnMuQmlnTnVtYmVyLmZyb20oZXRoZXJzLnV0aWxzLnJhbmRvbUJ5dGVzKDMyKSkudG9TdHJpbmcoKVxuXG4gICAgICAgIGNvbnN0IGlucHV0ID0ge1xuICAgICAgICAgICAgc2VjcmV0OiAkdS5CTjI1NlRvQmluKHNlY3JldCkuc3BsaXQoXCJcIiksXG4gICAgICAgICAgICBudWxsaWZpZXI6ICR1LkJOMjU2VG9CaW4obnVsbGlmaWVyKS5zcGxpdChcIlwiKSxcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciByZXMgPSBhd2FpdCBmZXRjaChcIi9kZXBvc2l0Lndhc21cIilcbiAgICAgICAgdmFyIGJ1ZmZlciA9IGF3YWl0IHJlcy5hcnJheUJ1ZmZlcigpXG4gICAgICAgIHZhciBkZXBvc2l0V0MgPSBhd2FpdCB3YyhidWZmZXIpXG4gICAgfVxuXG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICAgIHshIWFjY291bnQgPyAoXG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPHA+Y2hhaW5JZDoge2FjY291bnQuY2hhaW5JZH08L3A+XG4gICAgICAgICAgICAgICAgICAgIDxwPldhbGxldCBBZGRyZXNzOiB7YWNjb3VudC5hZGRyZXNzfTwvcD5cbiAgICAgICAgICAgICAgICAgICAgPHA+QmFsYW5jZToge2FjY291bnQuYmFsYW5jZX08L3A+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApIDogKFxuICAgICAgICAgICAgICAgIDxkaXY+XG4gICAgICAgICAgICAgICAgICAgIDxidXR0b24gb25DbGljaz17Y29ubmVjdE1ldGFtYXNrfT5Db25uZWN0IE1ldGFtYXNrPC9idXR0b24+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICApfVxuXG4gICAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgICAgIDxociAvPlxuICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgIHshIWFjY291bnQgPyAoXG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtkZXBvc2l0RXRoZXJ9PkRlcG9zaXQgMSBFVEg8L2J1dHRvbj5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICkgOiAoXG4gICAgICAgICAgICAgICAgPGRpdj5cbiAgICAgICAgICAgICAgICAgICAgPHA+WW91IG5lZWQgdG8gY29ubmVjdCBNZXRhbWFzayB0byB1c2UgdGhpcyBzZWN0aW9uLjwvcD5cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICl9XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn1cblxuZXhwb3J0IGRlZmF1bHQgSW50ZXJmYWNlXG4iXSwibmFtZXMiOlsidXNlU3RhdGUiLCIkdSIsImV0aGVycyIsIndjIiwicmVxdWlyZSIsIkludGVyZmFjZSIsImFjY291bnQiLCJ1cGRhdGVBY2NvdW50IiwiY29ubmVjdE1ldGFtYXNrIiwid2luZG93IiwiZXRoZXJldW0iLCJhbGVydCIsImFjY291bnRzIiwicmVxdWVzdCIsIm1ldGhvZCIsImNoYWluSWQiLCJuZXR3b3JrVmVyc2lvbiIsImFjdGl2ZUFjY291bnQiLCJiYWxhbmNlIiwicGFyYW1zIiwibW92ZURlY2ltYWxMZWZ0IiwiQmlnTnVtYmVyIiwiZnJvbSIsInRvU3RyaW5nIiwibmV3QWNjb3VudFN0YXRlIiwiYWRkcmVzcyIsImUiLCJjb25zb2xlIiwibG9nIiwiZGVwb3NpdEV0aGVyIiwic2VjcmV0IiwidXRpbHMiLCJyYW5kb21CeXRlcyIsIm51bGxpZmllciIsImlucHV0IiwiQk4yNTZUb0JpbiIsInNwbGl0IiwicmVzIiwiZmV0Y2giLCJidWZmZXIiLCJhcnJheUJ1ZmZlciIsImRlcG9zaXRXQyIsImRpdiIsInAiLCJidXR0b24iLCJvbkNsaWNrIiwiaHIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/interface.js\n"));

/***/ })

});